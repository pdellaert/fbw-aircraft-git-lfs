name: Pre release
on:
  push:
    tags:
      - "v*-rc*"

jobs:
  build:
    runs-on: ubuntu-latest
    #outputs:
    # output1: ${{ steps.create_release.outputs.releaseId }}
    env:
      A32NX_PRODUCTION_BUILD: 1
      A32NX_INSTRUMENTS_BUILD_WORKERS: 2
      RELEASE_ZIP_NAME: A32NX-stable.zip
      BUILD_DIR_NAME: stable
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Create .env file
        run: |
          echo A32NX_PRODUCTION_BUILD=1 >> fbw-a32nx/.env
          echo CLIENT_ID=\"${{ secrets.NAVIGRAPH_CLIENT_ID }}\" >> fbw-a32nx/.env
          echo CLIENT_SECRET=\"${{ secrets.NAVIGRAPH_CLIENT_SECRET }}\" >> fbw-a32nx/.env
          echo CHARTFOX_SECRET=\"${{ secrets.CHARTFOX_SECRET }}\" >> fbw-a32nx/.env
          echo SENTRY_DSN=\"${{ secrets.SENTRY_DSN }}\" >> fbw-a32nx/.env
          echo BUILD_DIR_NAME=${{ env.BUILD_DIR_NAME }} >> .env
          echo LOCALAZY_READ_KEY=${{ secrets.LOCALAZY_READ_KEY }} >> .env
          echo VITE_BUILD=false >> .env
      - name: Build A32NX
        run: |
          ./scripts/dev-env/run.sh ./scripts/setup.sh
          ./scripts/dev-env/run.sh ./scripts/build.sh --no-tty -j 4
      - name: Build ZIP file
        run: |
          ./scripts/dev-env/run.sh node ./scripts/fragment_a32nx.js

          cp ./fbw-a32nx/out/build-modules/modules.json ./fbw-a32nx/out/flybywire-aircraft-a320-neo/install.json
          ./scripts/dev-env/run.sh node ./scripts/install-source_a32nx.js
          mkdir ./${{ env.BUILD_DIR_NAME }}
          cd ./fbw-a32nx/out/
          zip -r ../../${{ env.BUILD_DIR_NAME }}/${{ env.RELEASE_ZIP_NAME }} ./flybywire-aircraft-a320-neo/
          cd ../..
      - name: Create Release
        id: create_release

        run: |
          gh api
            --method POST
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/flybywiresim/a32nx/releases \
          -f tag_name=${{ github.ref }} \
          -f target_commitish=${{ github.ref }} \
          -f name=${{ github.ref }} \
          -F draft=false \
          -F prerelease=true \
          -F generate_release_notes=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload release asset
        run: |
          release_id = gh api --method GET /repos/flybywiresim/a32nx/releases/${{ github.ref }}
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --hostname HOSTNAME \
            /repos/OWNER/REPO/releases/$release_id/assets?name=${{ env.RELEASE_ZIP_NAME }} \
            -f '@./${{ env.BUILD_DIR_NAME }}/${{ env.RELEASE_ZIP_NAME }}'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
